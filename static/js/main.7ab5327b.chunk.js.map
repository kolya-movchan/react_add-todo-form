{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setName","setTitle","currentTodos","setTodo","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","selectedUser","largestID","sort","a","b","newTodo","type","placeholder","value","onChange","target","character","lettersEng","test","lettersRu","verifyCharacters","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ab5327b.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed === true,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [currentTodos, setTodo] = useState(todos);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleAddButton = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n\n    if (!name) {\n      setErrorUser(true);\n    }\n\n    if (!title || !name) {\n      return;\n    }\n\n    const selectedUser: User | undefined = usersFromServer.find(\n      user => user.name === name,\n    );\n\n    const largestID = currentTodos.sort((a: Todo, b: Todo) => (\n      b.id - a.id))[0].id;\n\n    if (selectedUser) {\n      const newTodo = [\n        ...currentTodos,\n        {\n          id: largestID + 1,\n          title,\n          completed: false,\n          userId: largestID + 1,\n          user: {\n            id: largestID + 1,\n            name,\n            username: selectedUser.username,\n            email: selectedUser.email,\n          },\n        },\n      ];\n\n      setTodo(newTodo);\n      setTitle('');\n      setName('');\n    }\n  };\n\n  const verifyCharacters = (character: string) => {\n    const lettersEng = /^[A-Za-z0-9 ]*$/.test(character);\n    const lettersRu = /^[ЁёА-я0-9 ]*$/.test(character);\n\n    return lettersEng || lettersRu;\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (verifyCharacters(value)) {\n      setTitle(value);\n      setErrorTitle(false);\n    }\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(event.target.value);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddButton}\n      >\n        <div className=\"field\">\n          <label className=\"titleLabel\">\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n            {errorTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={name}\n              onChange={handleChangeUser}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.name}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {errorUser && (\n              <span className=\"error\"> Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}